@page "/shoppingcart"
@using SwiftMart.Data
@using SwiftMart.Models
@inject SWdbcontext dbContext
@inject ShoppingCartService cartService
@inject IToastService toastService
<h3>Shopping Cart</h3>

@if (cartService.GetCartItems().Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in cartService.GetCartItems())
            {
                <tr>
                    <td>@item.Product.Name</td>
                    <td>@item.Product.Price</td>
                    <td>@item.Quantity</td>
                    <td>@(item.Product.Price * item.Quantity)</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => RemoveFromCart(item.Product.Id)">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-end">
        <strong>Total: @cartService.GetTotalPrice()</strong>
        <button class="btn btn-primary">Checkout</button>
    </div>
}
else
{
    <p>Your shopping cart is empty.</p>
}

@code {
    private void RemoveFromCart(int productId)
    {
        cartService.RemoveFromCart(productId);
        toastService.ShowInfo($"removed from cart");

    }
}